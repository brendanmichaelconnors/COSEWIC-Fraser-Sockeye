source("panel 8.r")
source("panel 7.r")
mypath <- file.path("output/",paste("DU_2panel_", g, ".pdf", sep = ""))
pdf(file=mypath, width=6.5, height=3)
par(mfrow=c(1,2), bty="o", mar=c(2,2,2,0))
Panel7(data7)
Panel8(data8)
dev.off()
#EXPORT TABLE OF % CHANGE OVER TIME
source("change table.r")
g
source("panel 1.r")
source("panel 2.r")
source("panel 3.r")
source("panel 4.r")
source("panel 5.r")
source("panel 6.r")
mypath <- file.path("output/",paste("DU_6panel_", g, ".pdf", sep = ""))
pdf(file=mypath, width=6.5, height=7.5)
par(mfrow=c(3,2), bty="o", mar=c(0,0,0,0))
Panel1(data1)
Panel2(data2)
Panel3(data3)
Panel4(data4)
Panel5(data5)
Panel6(data6)
dev.off()
source("panel 7.r")
source("panel 8.r")
mypath <- file.path("output/",paste("DU_2panel_", g, ".pdf", sep = ""))
pdf(file=mypath, width=6.5, height=3)
par(mfrow=c(1,2), bty="o", mar=c(0,0,0,0))
Panel7(data7)
Panel8(data8)
dev.off()
# LOOP THROUGH EACH DU TO GENERATE 6 PANEL PLOT
for (g in 1:24){
source("panel 1.r")
source("panel 2.r")
source("panel 3.r")
source("panel 4.r")
source("panel 5.r")
source("panel 6.r")
mypath <- file.path("output/",paste("DU_6panel_", g, ".pdf", sep = ""))
pdf(file=mypath, width=6.5, height=7.5)
par(mfrow=c(3,2), bty="o", mar=c(0,0,0,0))
Panel1(data1)
Panel2(data2)
Panel3(data3)
Panel4(data4)
Panel5(data5)
Panel6(data6)
dev.off()
}
# LOOP THROUGH EACH DU TO GENERATE 6 PANEL PLOT
for (g in 1:24){
source("panel 7.r")
source("panel 8.r")
mypath <- file.path("output/",paste("DU_2panel_", g, ".pdf", sep = ""))
pdf(file=mypath, width=6.5, height=3)
par(mfrow=c(1,2), bty="o", mar=c(0,0,0,0))
Panel7(data7)
Panel8(data8)
dev.off()
}
close.screen(all.screens = TRUE)
# LOOP THROUGH EACH DU TO GENERATE 6 PANEL PLOT
for (g in 1:24){
source("panel 1.r")
source("panel 2.r")
source("panel 3.r")
source("panel 4.r")
source("panel 5.r")
source("panel 6.r")
mypath <- file.path("output/",paste("DU_6panel_", g, ".pdf", sep = ""))
pdf(file=mypath, width=6.5, height=7.5)
par(mfrow=c(3,2), bty="o", mar=c(0,0,0,0))
Panel1(data1)
Panel2(data2)
Panel3(data3)
Panel4(data4)
Panel5(data5)
Panel6(data6)
dev.off()
}
# LOOP THROUGH EACH DU TO GENERATE 6 PANEL PLOT
for (g in 1:24){
source("panel 7.r")
source("panel 8.r")
mypath <- file.path("output/",paste("DU_2panel_", g, ".pdf", sep = ""))
pdf(file=mypath, width=6.5, height=3)
par(mfrow=c(1,2), bty="o", mar=c(0,0,0,0))
Panel7(data7)
Panel8(data8)
dev.off()
}
close.screen(all.screens = TRUE)
for (g in 1:24){
source("panel 1.r")
source("panel 2.r")
source("panel 3.r")
source("panel 4.r")
source("panel 5.r")
source("panel 6.r")
mypath <- file.path("output/",paste("DU_6panel_", g, ".pdf", sep = ""))
pdf(file=mypath, width=6.5, height=7.5)
par(mfrow=c(3,2), bty="o", mar=c(0,0,0,0))
Panel1(data1)
Panel2(data2)
Panel3(data3)
Panel4(data4)
Panel5(data5)
Panel6(data6)
dev.off()
}
#import raw data and subset for DU
dataRaw2 <- read.csv("data/skall_update.csv")
##Subset data1 to include only the rows corresponding to the current working DUID identified in the panel.combine R document
#If the DUID does not exist, will produce a blank plot
data2<-dataRaw2[which(dataRaw2$DUID == g),]
if (nrow(data2)==0) {
plot(1:10, 1:10, type = "n", xlab = " ", ylab = " ", axes = FALSE)
title("No Corresponding Data for this DU", cex.main=0.8, line = -10)
} else {
#alter data so starts at 1950, has every year, and data from each year are added together for each column
allDates <- seq(1950, 2015, 1)
data2full <- matrix(data=NA, nrow=length(allDates), ncol=5)
colnames(data2full) <- c("Year", "males", "females", "eff_fem", "FPSM")
data2full[,1] <- allDates
for(i in 1:nrow(data2full)){
data2cut <- subset(data2, Year == data2full[i,1])
if(nrow(data2cut) > 0){
data2full[i,2] <- sum(data2cut[,8],na.rm=T)
data2full[i,3] <- sum(data2cut[,9],na.rm=T)
data2full[i,4] <- sum(data2cut[,11],na.rm=T)
data2full[i,5] <- sum(data2cut[,12],na.rm=T)
}
}
#create dataframe with data for stacked barplot
data2plot <- rbind(data2full[,4], data2full[,2], data2full[,5])
colnames(data2plot) <- data2full[,1]
#determine the height of the yaxis based on largest bar in graph
most <- (max(data2plot[1,]+data2plot[2,]+data2plot[3,], na.rm=T))/1000
most <- most+(0.3*most)
least <- (min(data2plot[1,]+data2plot[2,]+data2plot[3,], na.rm=T))/1000
#top2 <- signif(most, digits=1)
#if(top2 < most){
#  top2 <- top2 + 0.2*top2
#}
Years <- c(1950,1970,1990,2010)
# a function to create pretty axis breaks for the variable y axis, used in plotting
yy <- labeling::extended(least, most, 4, only.loose=TRUE)
#plot
par(mar=c(3,2.2,2.5,1))
barplot(data2plot/1000, col=c(grey(0.25),grey(0.75),grey(1)), space=0, ylim = c(0, most), axes=F, axisnames=F)
axis(1, at=seq(0,60,20), labels=Years, line=0, cex.axis=1, padj=-0.75, tck=-0.015)
axis(2, at=yy, line=-0.7, cex.axis=1, padj=1, tck=-0.015)
mtext("Number of fish (000s)", side=2, line=0.7, cex=0.75)
mtext("Year", side=1, line=1.5, cex=0.75)
par(mar=c(0,0,0,0),new=TRUE)
x<-0:1;y<-0:1;plot(x,y,xaxt="n",yaxt="n",type="n",bty="n")
legend(x=0.125, y=1,  legend=c("EFS", "Males","Female PSM"), fill=c(grey(0.25),grey(0.75),grey(1)),
border=c("black","black","black"), bty="n", cex=0.85, ncol=1, seg.len=0.65)
#add plot label
mtext("(b)", side=3, line=-1.5, adj=0.05, cex=1)
#end of if else loop
}
#end of function
data2
#import raw data and subset for DU
dataRaw2 <- read.csv("data/skall_update.csv")
##Subset data1 to include only the rows corresponding to the current working DUID identified in the panel.combine R document
#If the DUID does not exist, will produce a blank plot
data2<-dataRaw2[which(dataRaw2$DUID == g),]
if (nrow(data2)==0) {
plot(1:10, 1:10, type = "n", xlab = " ", ylab = " ", axes = FALSE)
title("No Corresponding Data for this DU", cex.main=0.8, line = -10)
} else {
#alter data so starts at 1950, has every year, and data from each year are added together for each column
allDates <- seq(1950, 2015, 1)
data2full <- matrix(data=NA, nrow=length(allDates), ncol=5)
colnames(data2full) <- c("Year", "males", "females", "eff_fem", "FPSM")
data2full[,1] <- allDates
for(i in 1:nrow(data2full)){
data2cut <- subset(data2, Year == data2full[i,1])
if(nrow(data2cut) > 0){
data2full[i,2] <- sum(data2cut[,8],na.rm=T)
data2full[i,3] <- sum(data2cut[,9],na.rm=T)
data2full[i,4] <- sum(data2cut[,11],na.rm=T)
data2full[i,5] <- sum(data2cut[,12],na.rm=T)
}
}
#create dataframe with data for stacked barplot
data2plot <- rbind(data2full[,4], data2full[,2], data2full[,5])
colnames(data2plot) <- data2full[,1]
#determine the height of the yaxis based on largest bar in graph
most <- (max(data2plot[1,]+data2plot[2,]+data2plot[3,], na.rm=T))/1000
most <- most+(0.3*most)
least <- (min(data2plot[1,]+data2plot[2,]+data2plot[3,], na.rm=T))/1000
#top2 <- signif(most, digits=1)
#if(top2 < most){
#  top2 <- top2 + 0.2*top2
#}
Years <- c(1950,1970,1990,2010)
# a function to create pretty axis breaks for the variable y axis, used in plotting
yy <- labeling::extended(least, most, 4, only.loose=TRUE)
#plot
par(mar=c(3,2.2,2.5,1))
barplot(data2plot/1000, col=c(grey(0.25),grey(0.75),grey(1)), space=0, ylim = c(0, most), axes=F, axisnames=F)
axis(1, at=seq(0,60,20), labels=Years, line=0, cex.axis=1, padj=-0.75, tck=-0.015)
axis(2, at=yy, line=-0.7, cex.axis=1, padj=1, tck=-0.015)
mtext("Number of fish (000s)", side=2, line=0.7, cex=0.75)
mtext("Year", side=1, line=1.5, cex=0.75)
par(mar=c(0,0,0,0),new=TRUE)
x<-0:1;y<-0:1;plot(x,y,xaxt="n",yaxt="n",type="n",bty="n")
legend(x=0.125, y=1,  legend=c("EFS", "Males","Female PSM"), fill=c(grey(0.25),grey(0.75),grey(1)),
border=c("black","black","black"), bty="n", cex=0.85, ncol=1, seg.len=0.65)
#add plot label
mtext("(b)", side=3, line=-1.5, adj=0.05, cex=1)
#end of if else loop
}
##Subset data1 to include only the rows corresponding to the current working DUID identified in the panel.combine R document
#If the DUID does not exist, will produce a blank plot
data2<-dataRaw2[which(dataRaw2$DUID == g),]
data2
#import raw data and subset for DU
dataRaw2 <- read.csv("data/skall_update.csv")
data2
#import raw data and subset for DU
dataRaw2 <- read.csv("data/skall_update.csv")
dataRaw2
##Subset data1 to include only the rows corresponding to the current working DUID identified in the panel.combine R document
#If the DUID does not exist, will produce a blank plot
data2<-dataRaw2[which(dataRaw2$DUID == g),]
data2
g
(nrow(data2)==0
nrow(data2)==0
nrow(data2)==0
nrow(data2)
#Returns a plot for panel 2
#import raw data and subset for DU
dataRaw2 <- read.csv("data/skall_update.csv")
##Subset data1 to include only the rows corresponding to the current working DUID identified in the panel.combine R document
#If the DUID does not exist, will produce a blank plot
data2<-dataRaw2[which(dataRaw2$DUID == g),]
data2
g
g=6
##Subset data1 to include only the rows corresponding to the current working DUID identified in the panel.combine R document
#If the DUID does not exist, will produce a blank plot
data2<-dataRaw2[which(dataRaw2$DUID == g),]
data2
dataRaw2$DUID
dataRaw2
#import raw data and subset for DU
dataRaw2 <- read.csv("data/skall_update.csv")
##Subset data1 to include only the rows corresponding to the current working DUID identified in the panel.combine R document
#If the DUID does not exist, will produce a blank plot
data2<-dataRaw2[which(dataRaw2$DUID == g),]
data2
for (g in 1:24){
source("panel 1.r")
source("panel 2.r")
source("panel 3.r")
source("panel 4.r")
source("panel 5.r")
source("panel 6.r")
mypath <- file.path("output/",paste("DU_6panel_", g, ".pdf", sep = ""))
pdf(file=mypath, width=6.5, height=7.5)
par(mfrow=c(3,2), bty="o", mar=c(0,0,0,0))
Panel1(data1)
Panel2(data2)
Panel3(data3)
Panel4(data4)
Panel5(data5)
Panel6(data6)
dev.off()
}
for (g in 1:24){
source("panel 7.r")
source("panel 8.r")
mypath <- file.path("output/",paste("DU_2panel_", g, ".pdf", sep = ""))
pdf(file=mypath, width=6.5, height=3)
par(mfrow=c(1,2), bty="o", mar=c(0,0,0,0))
Panel7(data7)
Panel8(data8)
dev.off()
}
close.screen(all.screens = TRUE)
Panel7(data7)
Panel8(data8)
g=7
Panel7(data7)
Panel8(data8)
g=16
Panel7(data7)
#import raw data and subset for DU
dataRaw7 <- read.csv("data/Fraser Sockeye (SR and Juvenile Data Dec 2014).csv")
dataRaw7
#get 'Sockdat July 11 2014 (COSEWIC).csv' for dataRaw3
dataRaw3 <- read.csv("data/Sockdat July 11 2014 (COSEWIC).csv")
data7a<-dataRaw7[which(dataRaw7$DUID == g),]
data7a
if (nrow(data7a)==0) {
plot(1:10, 1:10, type = "n", xlab = " ", ylab = " ", axes = FALSE)
title(main = "No Corresponding Data for this DU", cex.main=0.8, line = -10)
} else {
data7b <- dataRaw3[which(dataRaw3$DUID == g),]
#inner if else loop
if(all(is.na(data7b$effective.female.spawners))==TRUE){
plot(1:10, 1:10, type = "n", xlab = " ", ylab = " ", axes = FALSE)
title("No Corresponding EFS Data for this DU", cex.main=0.8, line = -10)
} else {
data7 <- cbind(data7a, data7b$effective.female.spawners)
#calculate freshwater survial
data7$FS <- data7[,4]/data7[,5]
#generate smoothed Juv/EFS = 4yr running average (using 1yr before and 2yrs after)
SFS <- rollapply(data7[,6], 4, mean)
#SFS <-data7$FS
#remove first yr and last 2yrs from Year because cannot have 4yr average for those years
M3 <- nrow(data7)-2
Year <- data7[2:M3,2]
Sdata7 <- cbind(data7$Brood.Year, SFS)
#alter data so starts at 1950 and has every year
allDates <- seq(1950, 2013, 1)
data7AD <- matrix(data=allDates, nrow=length(allDates), ncol=1)
colnames(data7AD) <- "Year"
colnames(Sdata7) <- c("Year","SFS")
data7full <- merge(data7AD, Sdata7, by="Year", all.x=T)
#data7full <- cbind(allDates, SFS[3:66])
#determine top of y-axis
data7NNA <- subset(data7full, data7full[,2] != 'NA')
most7 <- max(data7NNA[,2])
least7 <- min(data7NNA[,2])
top7 <- signif(most7, digits=2)
if(top7 < most7){
top7 <- top7 + 40
}
# a function to create pretty axis breaks for the variable y axis, used in plotting
yy <- labeling::extended(least7, top7, 6, only.loose=TRUE)
#par(mar=c(2,2.4,2,0.3))
plot(data7full, type="l", axes=F, xlab="", ylab="", ylim=c(0,top7+(0.1*top7)), lwd=2, yaxs="i")
points(data7full,pch=16,cex=0.5)
axis(1, at=seq(1950,2013,20), line=0, cex.axis=0.75, padj=-1.75, tck=-0.015)
axis(2, at=yy, line=-0.47, cex.axis=0.75, padj=1.5, tck=-0.015)
mtext("Smoothed freshwater survival\n (smolt/EFS)", side=2, line=0.6, cex=0.75)
mtext("Brood year", side=1, line=0.85, cex=0.75)
#add plot label
mtext("(a)", side=3, line=1, adj=-0.15, cex=1)
#end of inner loop
}
#end of outer loop
}
data7b <- dataRaw3[which(dataRaw3$DUID == g),]
data7b
all(is.na(data7b$effective.female.spawners))
data7 <- cbind(data7a, data7b$effective.female.spawners)
data7
#calculate freshwater survial
data7$FS <- data7[,4]/data7[,5]
#generate smoothed Juv/EFS = 4yr running average (using 1yr before and 2yrs after)
SFS <- rollapply(data7[,6], 4, mean)
#SFS <-data7$FS
#remove first yr and last 2yrs from Year because cannot have 4yr average for those years
M3 <- nrow(data7)-2
Year <- data7[2:M3,2]
Sdata7 <- cbind(data7$Brood.Year, SFS)
Year
M3
data7
#Returns a plot for panel 7
#import raw data and subset for DU
dataRaw7 <- read.csv("data/Fraser Sockeye (SR and Juvenile Data Dec 2014).csv")
#get 'Sockdat July 11 2014 (COSEWIC).csv' for dataRaw3
dataRaw3 <- read.csv("data/Sockdat July 11 2014 (COSEWIC).csv")
#subset for DU
data7a<-dataRaw7[which(dataRaw7$DUID == g),]
if (nrow(data7a)==0) {
plot(1:10, 1:10, type = "n", xlab = " ", ylab = " ", axes = FALSE)
title(main = "No Corresponding Data for this DU", cex.main=0.8, line = -10)
} else {
data7b <- dataRaw3[which(dataRaw3$DUID == g),]
#inner if else loop
if(all(is.na(data7b$effective.female.spawners))==TRUE){
plot(1:10, 1:10, type = "n", xlab = " ", ylab = " ", axes = FALSE)
title("No Corresponding EFS Data for this DU", cex.main=0.8, line = -10)
} else {
data7 <- cbind(data7a, data7b$effective.female.spawners)
#calculate freshwater survial
data7$FS <- data7[,4]/data7[,5]
#generate smoothed Juv/EFS = 4yr running average (using 1yr before and 2yrs after)
SFS <- rollapply(data7[,6], 4, mean)
#SFS <-data7$FS
#remove first yr and last 2yrs from Year because cannot have 4yr average for those years
M3 <- nrow(data7)-2
Year <- data7[2:M3,3]
Sdata7 <- cbind(data7$Brood.Year, SFS)
#alter data so starts at 1950 and has every year
allDates <- seq(1950, 2013, 1)
data7AD <- matrix(data=allDates, nrow=length(allDates), ncol=1)
colnames(data7AD) <- "Year"
colnames(Sdata7) <- c("Year","SFS")
data7full <- merge(data7AD, Sdata7, by="Year", all.x=T)
#data7full <- cbind(allDates, SFS[3:66])
#determine top of y-axis
data7NNA <- subset(data7full, data7full[,2] != 'NA')
most7 <- max(data7NNA[,2])
least7 <- min(data7NNA[,2])
top7 <- signif(most7, digits=2)
if(top7 < most7){
top7 <- top7 + 40
}
# a function to create pretty axis breaks for the variable y axis, used in plotting
yy <- labeling::extended(least7, top7, 6, only.loose=TRUE)
#par(mar=c(2,2.4,2,0.3))
plot(data7full, type="l", axes=F, xlab="", ylab="", ylim=c(0,top7+(0.1*top7)), lwd=2, yaxs="i")
points(data7full,pch=16,cex=0.5)
axis(1, at=seq(1950,2013,20), line=0, cex.axis=0.75, padj=-1.75, tck=-0.015)
axis(2, at=yy, line=-0.47, cex.axis=0.75, padj=1.5, tck=-0.015)
mtext("Smoothed freshwater survival\n (smolt/EFS)", side=2, line=0.6, cex=0.75)
mtext("Brood year", side=1, line=0.85, cex=0.75)
#add plot label
mtext("(a)", side=3, line=1, adj=-0.15, cex=1)
#end of inner loop
}
#end of outer loop
}
SFS
data7b <- dataRaw3[which(dataRaw3$DUID == g),]
#inner if else loop
if(all(is.na(data7b$effective.female.spawners))==TRUE){
plot(1:10, 1:10, type = "n", xlab = " ", ylab = " ", axes = FALSE)
title("No Corresponding EFS Data for this DU", cex.main=0.8, line = -10)
} else {
data7 <- cbind(data7a, data7b$effective.female.spawners)
#calculate freshwater survial
data7$FS <- data7[,4]/data7[,5]
#generate smoothed Juv/EFS = 4yr running average (using 1yr before and 2yrs after)
SFS <- rollapply(data7[,6], 4, mean)
#remove first yr and last 2yrs from Year because cannot have 4yr average for those years
M3 <- nrow(data7)-2
Year <- data7[2:M3,3]
Sdata7 <- cbind(data7$Brood.Year, SFS)
data7 <- cbind(data7a, data7b$effective.female.spawners)
#calculate freshwater survial
data7$FS <- data7[,4]/data7[,5]
#generate smoothed Juv/EFS = 4yr running average (using 1yr before and 2yrs after)
SFS <- rollapply(data7[,6], 4, mean)
#remove first yr and last 2yrs from Year because cannot have 4yr average for those years
M3 <- nrow(data7)-2
Year <- data7[2:M3,3]
Sdata7 <- cbind(data7$Brood.Year, SFS)
data7$Brood.Year
SFS
#Returns a plot for panel 7
#import raw data and subset for DU
dataRaw7 <- read.csv("data/Fraser Sockeye (SR and Juvenile Data Dec 2014).csv")
#get 'Sockdat July 11 2014 (COSEWIC).csv' for dataRaw3
dataRaw3 <- read.csv("data/Sockdat July 11 2014 (COSEWIC).csv")
#subset for DU
data7a<-dataRaw7[which(dataRaw7$DUID == g),]
data7b <- dataRaw3[which(dataRaw3$DUID == g),]
data7 <- cbind(data7a, data7b$effective.female.spawners)
#calculate freshwater survial
data7$FS <- data7[,4]/data7[,5]
#generate smoothed Juv/EFS = 4yr running average (using 1yr before and 2yrs after)
SFS <- rollapply(data7[,6], 4, mean)
#SFS <-data7$FS
#remove first yr and last 2yrs from Year because cannot have 4yr average for those years
M3 <- nrow(data7)-2
Year <- data7[2:M3,2]
Sdata7 <- cbind(data7$Brood.Year, SFS)
SFS
data7$Brood.Year
SFS
data7
Sdata7 <- cbind(data7$Brood.Year[2:64], SFS)
Sdata7
data7 <- cbind(data7a, data7b$effective.female.spawners)
#calculate freshwater survial
data7$FS <- data7[,4]/data7[,5]
#generate smoothed Juv/EFS = 4yr running average (using 1yr before and 2yrs after)
SFS <- rollapply(data7[,6], 4, mean)
#SFS <-data7$FS
#remove first yr and last 2yrs from Year because cannot have 4yr average for those years
M3 <- nrow(data7)-2
Year <- data7[2:M3,2]
Sdata7 <- cbind(data7$Brood.Year[2:64], SFS)
Sdata7
Panel7(data7)
Panel8(data8)
source("panel 7.r")
source("panel 8.r")
mypath <- file.path("output/",paste("DU_2panel_", g, ".pdf", sep = ""))
pdf(file=mypath, width=6.5, height=3)
par(mfrow=c(1,2), bty="o", mar=c(0,0,0,0))
Panel7(data7)
Panel8(data8)
dev.off()
g
#EXPORT TABLE OF % CHANGE OVER TIME
source("change table.r")
library(runjags)
#EXPORT TABLE OF % CHANGE OVER TIME
source("change table.r")
library(plotrix)
library(R2jags)
library(zoo)
library(psych)
#EXPORT TABLE OF % CHANGE OVER TIME
source("change table.r")
